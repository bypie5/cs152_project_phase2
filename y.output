State 50 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 115 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | program

    3 program: functions

    4 functions: function
    5          | function functions

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    7 declarations: %empty
    8             | declaration SEMICOLON declarations

    9 declaration: identifiers COLON declaration_prime

   10 declaration_prime: INTEGER
   11                  | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 identifiers: identifier
   13            | identifier COMMA identifiers

   14 identifier: IDENT

   15 statements: statement SEMICOLON
   16           | statement SEMICOLON statements

   17 statement: var ASSIGN expression
   18          | RETURN expression
   19          | CONTINUE
   20          | IF boolexpr THEN statements else_prime ENDIF
   21          | WHILE boolexpr BEGINLOOP statements ENDLOOP
   22          | DO BEGINLOOP statements ENDLOOP WHILE boolexpr
   23          | READ vars
   24          | WRITE vars

   25 else_prime: %empty
   26           | ELSE statements

   27 vars: var
   28     | var COMMA vars

   29 comp: EQ
   30     | NEQ
   31     | LT
   32     | GT
   33     | LTE
   34     | GTE

   35 var: identifier
   36    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   37 expression: multiplicative_expr multiplicative_exprs

   38 multiplicative_exprs: %empty
   39                     | SUB multiplicative_expr multiplicative_exprs
   40                     | ADD multiplicative_expr multiplicative_exprs

   41 multiplicative_expr: term terms

   42 terms: %empty
   43      | MULT term terms
   44      | DIV term terms
   45      | MOD term terms

   46 boolexpr: relation_and_expr r_a_es

   47 r_a_es: %empty
   48       | OR relation_and_expr r_a_es

   49 relation_and_expr: relation_expr r_es

   50 r_es: %empty
   51     | AND relation_expr r_es

   52 relation_expr: expression comp expression
   53              | TRUE
   54              | FALSE
   55              | L_PAREN boolexpr R_PAREN
   56              | NOT expression comp expression
   57              | NOT TRUE
   58              | NOT FALSE
   59              | NOT L_PAREN boolexpr R_PAREN

   60 term: var
   61     | NUMBER
   62     | L_PAREN expression R_PAREN
   63     | SUB var
   64     | SUB NUMBER
   65     | SUB L_PAREN expression R_PAREN
   66     | identifier L_PAREN expressions R_PAREN

   67 expressions: expression
   68            | expression expressions COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 6
BEGIN_PARAMS (259) 6
END_PARAMS (260) 6
BEGIN_LOCALS (261) 6
END_LOCALS (262) 6
BEGIN_BODY (263) 6
END_BODY (264) 6
INTEGER (265) 10 11
ARRAY (266) 11
OF (267) 11
IF (268) 20
THEN (269) 20
ENDIF (270) 20
ELSE (271) 26
WHILE (272) 21 22
DO (273) 22
BEGINLOOP (274) 21 22
ENDLOOP (275) 21 22
CONTINUE (276) 19
READ (277) 23
WRITE (278) 24
AND (279) 51
OR (280) 48
NOT (281) 56 57 58 59
TRUE (282) 53 57
FALSE (283) 54 58
RETURN (284) 18
SUB (285) 39 63 64 65
ADD (286) 40
MULT (287) 43
DIV (288) 44
MOD (289) 45
EQ (290) 29
NEQ (291) 30
LT (292) 31
GT (293) 32
LTE (294) 33
GTE (295) 34
SEMICOLON (296) 6 8 15 16
COLON (297) 9
COMMA (298) 13 28 68
L_PAREN (299) 55 59 62 65 66
R_PAREN (300) 55 59 62 65 66
L_SQUARE_BRACKET (301) 11 36
R_SQUARE_BRACKET (302) 11 36
ASSIGN (303) 17
NUMBER (304) 11 61 64
IDENT (305) 6 14
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
input (53)
    on left: 1 2, on right: 0
program (54)
    on left: 3, on right: 2
functions (55)
    on left: 4 5, on right: 3 5
function (56)
    on left: 6, on right: 4 5
declarations (57)
    on left: 7 8, on right: 6 8
declaration (58)
    on left: 9, on right: 8
declaration_prime (59)
    on left: 10 11, on right: 9
identifiers (60)
    on left: 12 13, on right: 9 13
identifier (61)
    on left: 14, on right: 12 13 35 36 66
statements (62)
    on left: 15 16, on right: 6 16 20 21 22 26
statement (63)
    on left: 17 18 19 20 21 22 23 24, on right: 15 16
else_prime (64)
    on left: 25 26, on right: 20
vars (65)
    on left: 27 28, on right: 23 24 28
comp (66)
    on left: 29 30 31 32 33 34, on right: 52 56
var (67)
    on left: 35 36, on right: 17 27 28 60 63
expression (68)
    on left: 37, on right: 17 18 36 52 56 62 65 67 68
multiplicative_exprs (69)
    on left: 38 39 40, on right: 37 39 40
multiplicative_expr (70)
    on left: 41, on right: 37 39 40
terms (71)
    on left: 42 43 44 45, on right: 41 43 44 45
boolexpr (72)
    on left: 46, on right: 20 21 22 55 59
r_a_es (73)
    on left: 47 48, on right: 46 48
relation_and_expr (74)
    on left: 49, on right: 46 48
r_es (75)
    on left: 50 51, on right: 49 51
relation_expr (76)
    on left: 52 53 54 55 56 57 58 59, on right: 49 51
term (77)
    on left: 60 61 62 63 64 65 66, on right: 41 43 44 45
expressions (78)
    on left: 67 68, on right: 66 68


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (input)

    input      go to state 2
    program    go to state 3
    functions  go to state 4
    function   go to state 5


State 1

    6 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 2

    0 $accept: input . $end

    $end  shift, and go to state 7


State 3

    2 input: program .

    $default  reduce using rule 2 (input)


State 4

    3 program: functions .

    $default  reduce using rule 3 (program)


State 5

    4 functions: function .
    5          | function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 4 (functions)

    functions  go to state 8
    function   go to state 5


State 6

    6 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: input $end .

    $default  accept


State 8

    5 functions: function functions .

    $default  reduce using rule 5 (functions)


State 9

    6 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 7 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    identifiers   go to state 14
    identifier    go to state 15


State 11

   14 identifier: IDENT .

    $default  reduce using rule 14 (identifier)


State 12

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 14

    9 declaration: identifiers . COLON declaration_prime

    COLON  shift, and go to state 18


State 15

   12 identifiers: identifier .
   13            | identifier . COMMA identifiers

    COMMA  shift, and go to state 19

    $default  reduce using rule 12 (identifiers)


State 16

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 11

    $default  reduce using rule 7 (declarations)

    declarations  go to state 21
    declaration   go to state 13
    identifiers   go to state 14
    identifier    go to state 15


State 18

    9 declaration: identifiers COLON . declaration_prime

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23

    declaration_prime  go to state 24


State 19

   13 identifiers: identifier COMMA . identifiers

    IDENT  shift, and go to state 11

    identifiers  go to state 25
    identifier   go to state 15


State 20

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 7 (declarations)

    declarations  go to state 26
    declaration   go to state 13
    identifiers   go to state 14
    identifier    go to state 15


State 21

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 22

   10 declaration_prime: INTEGER .

    $default  reduce using rule 10 (declaration_prime)


State 23

   11 declaration_prime: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 24

    9 declaration: identifiers COLON declaration_prime .

    $default  reduce using rule 9 (declaration)


State 25

   13 identifiers: identifier COMMA identifiers .

    $default  reduce using rule 13 (identifiers)


State 26

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 28


State 27

   11 declaration_prime: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 28

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 30


State 29

   11 declaration_prime: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 11

    identifier  go to state 39
    statements  go to state 40
    statement   go to state 41
    var         go to state 42


State 31

   11 declaration_prime: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 43


State 32

   20 statement: IF . boolexpr THEN statements else_prime ENDIF

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    boolexpr             go to state 54
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    term                 go to state 57


State 33

   21 statement: WHILE . boolexpr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    boolexpr             go to state 58
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    term                 go to state 57


State 34

   22 statement: DO . BEGINLOOP statements ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 59


State 35

   19 statement: CONTINUE .

    $default  reduce using rule 19 (statement)


State 36

   23 statement: READ . vars

    IDENT  shift, and go to state 11

    identifier  go to state 39
    vars        go to state 60
    var         go to state 61


State 37

   24 statement: WRITE . vars

    IDENT  shift, and go to state 11

    identifier  go to state 39
    vars        go to state 62
    var         go to state 61


State 38

   18 statement: RETURN . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 64
    multiplicative_expr  go to state 53
    term                 go to state 57


State 39

   35 var: identifier .
   36    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 35 (var)


State 40

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 66


State 41

   15 statements: statement . SEMICOLON
   16           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 67


State 42

   17 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


State 43

   11 declaration_prime: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 69


State 44

   56 relation_expr: NOT . expression comp expression
   57              | NOT . TRUE
   58              | NOT . FALSE
   59              | NOT . L_PAREN boolexpr R_PAREN

    TRUE     shift, and go to state 70
    FALSE    shift, and go to state 71
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 73
    multiplicative_expr  go to state 53
    term                 go to state 57


State 45

   53 relation_expr: TRUE .

    $default  reduce using rule 53 (relation_expr)


State 46

   54 relation_expr: FALSE .

    $default  reduce using rule 54 (relation_expr)


State 47

   63 term: SUB . var
   64     | SUB . NUMBER
   65     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 75
    IDENT    shift, and go to state 11

    identifier  go to state 39
    var         go to state 76


State 48

   55 relation_expr: L_PAREN . boolexpr R_PAREN
   62 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 77
    multiplicative_expr  go to state 53
    boolexpr             go to state 78
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    term                 go to state 57


State 49

   61 term: NUMBER .

    $default  reduce using rule 61 (term)


State 50

   35 var: identifier .
   36    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   66 term: identifier . L_PAREN expressions R_PAREN

    L_PAREN           shift, and go to state 79
    L_SQUARE_BRACKET  shift, and go to state 65

    L_PAREN   [reduce using rule 35 (var)]
    $default  reduce using rule 35 (var)


State 51

   60 term: var .

    $default  reduce using rule 60 (term)


State 52

   52 relation_expr: expression . comp expression

    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 86


State 53

   37 expression: multiplicative_expr . multiplicative_exprs

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    SUB       [reduce using rule 38 (multiplicative_exprs)]
    $default  reduce using rule 38 (multiplicative_exprs)

    multiplicative_exprs  go to state 89


State 54

   20 statement: IF boolexpr . THEN statements else_prime ENDIF

    THEN  shift, and go to state 90


State 55

   46 boolexpr: relation_and_expr . r_a_es

    OR  shift, and go to state 91

    $default  reduce using rule 47 (r_a_es)

    r_a_es  go to state 92


State 56

   49 relation_and_expr: relation_expr . r_es

    AND  shift, and go to state 93

    $default  reduce using rule 50 (r_es)

    r_es  go to state 94


State 57

   41 multiplicative_expr: term . terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 42 (terms)

    terms  go to state 98


State 58

   21 statement: WHILE boolexpr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 99


State 59

   22 statement: DO BEGINLOOP . statements ENDLOOP WHILE boolexpr

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 11

    identifier  go to state 39
    statements  go to state 100
    statement   go to state 41
    var         go to state 42


State 60

   23 statement: READ vars .

    $default  reduce using rule 23 (statement)


State 61

   27 vars: var .
   28     | var . COMMA vars

    COMMA  shift, and go to state 101

    $default  reduce using rule 27 (vars)


State 62

   24 statement: WRITE vars .

    $default  reduce using rule 24 (statement)


State 63

   62 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 102
    multiplicative_expr  go to state 53
    term                 go to state 57


State 64

   18 statement: RETURN expression .

    $default  reduce using rule 18 (statement)


State 65

   36 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 103
    multiplicative_expr  go to state 53
    term                 go to state 57


State 66

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 67

   15 statements: statement SEMICOLON .
   16           | statement SEMICOLON . statements

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 11

    $default  reduce using rule 15 (statements)

    identifier  go to state 39
    statements  go to state 104
    statement   go to state 41
    var         go to state 42


State 68

   17 statement: var ASSIGN . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 105
    multiplicative_expr  go to state 53
    term                 go to state 57


State 69

   11 declaration_prime: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration_prime)


State 70

   57 relation_expr: NOT TRUE .

    $default  reduce using rule 57 (relation_expr)


State 71

   58 relation_expr: NOT FALSE .

    $default  reduce using rule 58 (relation_expr)


State 72

   59 relation_expr: NOT L_PAREN . boolexpr R_PAREN
   62 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 77
    multiplicative_expr  go to state 53
    boolexpr             go to state 106
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    term                 go to state 57


State 73

   56 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 107


State 74

   65 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 108
    multiplicative_expr  go to state 53
    term                 go to state 57


State 75

   64 term: SUB NUMBER .

    $default  reduce using rule 64 (term)


State 76

   63 term: SUB var .

    $default  reduce using rule 63 (term)


State 77

   52 relation_expr: expression . comp expression
   62 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 80
    NEQ      shift, and go to state 81
    LT       shift, and go to state 82
    GT       shift, and go to state 83
    LTE      shift, and go to state 84
    GTE      shift, and go to state 85
    R_PAREN  shift, and go to state 109

    comp  go to state 86


State 78

   55 relation_expr: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 110


State 79

   66 term: identifier L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 111
    multiplicative_expr  go to state 53
    term                 go to state 57
    expressions          go to state 112


State 80

   29 comp: EQ .

    $default  reduce using rule 29 (comp)


State 81

   30 comp: NEQ .

    $default  reduce using rule 30 (comp)


State 82

   31 comp: LT .

    $default  reduce using rule 31 (comp)


State 83

   32 comp: GT .

    $default  reduce using rule 32 (comp)


State 84

   33 comp: LTE .

    $default  reduce using rule 33 (comp)


State 85

   34 comp: GTE .

    $default  reduce using rule 34 (comp)


State 86

   52 relation_expr: expression comp . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 113
    multiplicative_expr  go to state 53
    term                 go to state 57


State 87

   39 multiplicative_exprs: SUB . multiplicative_expr multiplicative_exprs

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    multiplicative_expr  go to state 114
    term                 go to state 57


State 88

   40 multiplicative_exprs: ADD . multiplicative_expr multiplicative_exprs

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    multiplicative_expr  go to state 115
    term                 go to state 57


State 89

   37 expression: multiplicative_expr multiplicative_exprs .

    $default  reduce using rule 37 (expression)


State 90

   20 statement: IF boolexpr THEN . statements else_prime ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 11

    identifier  go to state 39
    statements  go to state 116
    statement   go to state 41
    var         go to state 42


State 91

   48 r_a_es: OR . relation_and_expr r_a_es

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    relation_and_expr    go to state 117
    relation_expr        go to state 56
    term                 go to state 57


State 92

   46 boolexpr: relation_and_expr r_a_es .

    $default  reduce using rule 46 (boolexpr)


State 93

   51 r_es: AND . relation_expr r_es

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    relation_expr        go to state 118
    term                 go to state 57


State 94

   49 relation_and_expr: relation_expr r_es .

    $default  reduce using rule 49 (relation_and_expr)


State 95

   43 terms: MULT . term terms

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier  go to state 50
    var         go to state 51
    term        go to state 119


State 96

   44 terms: DIV . term terms

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier  go to state 50
    var         go to state 51
    term        go to state 120


State 97

   45 terms: MOD . term terms

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier  go to state 50
    var         go to state 51
    term        go to state 121


State 98

   41 multiplicative_expr: term terms .

    $default  reduce using rule 41 (multiplicative_expr)


State 99

   21 statement: WHILE boolexpr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 11

    identifier  go to state 39
    statements  go to state 122
    statement   go to state 41
    var         go to state 42


State 100

   22 statement: DO BEGINLOOP statements . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 123


State 101

   28 vars: var COMMA . vars

    IDENT  shift, and go to state 11

    identifier  go to state 39
    vars        go to state 124
    var         go to state 61


State 102

   62 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 109


State 103

   36 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 125


State 104

   16 statements: statement SEMICOLON statements .

    $default  reduce using rule 16 (statements)


State 105

   17 statement: var ASSIGN expression .

    $default  reduce using rule 17 (statement)


State 106

   59 relation_expr: NOT L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 126


State 107

   56 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 127
    multiplicative_expr  go to state 53
    term                 go to state 57


State 108

   65 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 128


State 109

   62 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term)


State 110

   55 relation_expr: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 55 (relation_expr)


State 111

   67 expressions: expression .
   68            | expression . expressions COMMA

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    $default  reduce using rule 67 (expressions)

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 111
    multiplicative_expr  go to state 53
    term                 go to state 57
    expressions          go to state 129


State 112

   66 term: identifier L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 130


State 113

   52 relation_expr: expression comp expression .

    $default  reduce using rule 52 (relation_expr)


State 114

   39 multiplicative_exprs: SUB multiplicative_expr . multiplicative_exprs

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    SUB       [reduce using rule 38 (multiplicative_exprs)]
    $default  reduce using rule 38 (multiplicative_exprs)

    multiplicative_exprs  go to state 131


State 115

   40 multiplicative_exprs: ADD multiplicative_expr . multiplicative_exprs

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    SUB       [reduce using rule 38 (multiplicative_exprs)]
    $default  reduce using rule 38 (multiplicative_exprs)

    multiplicative_exprs  go to state 132


State 116

   20 statement: IF boolexpr THEN statements . else_prime ENDIF

    ELSE  shift, and go to state 133

    $default  reduce using rule 25 (else_prime)

    else_prime  go to state 134


State 117

   48 r_a_es: OR relation_and_expr . r_a_es

    OR  shift, and go to state 91

    $default  reduce using rule 47 (r_a_es)

    r_a_es  go to state 135


State 118

   51 r_es: AND relation_expr . r_es

    AND  shift, and go to state 93

    $default  reduce using rule 50 (r_es)

    r_es  go to state 136


State 119

   43 terms: MULT term . terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 42 (terms)

    terms  go to state 137


State 120

   44 terms: DIV term . terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 42 (terms)

    terms  go to state 138


State 121

   45 terms: MOD term . terms

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 42 (terms)

    terms  go to state 139


State 122

   21 statement: WHILE boolexpr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 140


State 123

   22 statement: DO BEGINLOOP statements ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 141


State 124

   28 vars: var COMMA vars .

    $default  reduce using rule 28 (vars)


State 125

   36 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 36 (var)


State 126

   59 relation_expr: NOT L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 59 (relation_expr)


State 127

   56 relation_expr: NOT expression comp expression .

    $default  reduce using rule 56 (relation_expr)


State 128

   65 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 65 (term)


State 129

   68 expressions: expression expressions . COMMA

    COMMA  shift, and go to state 142


State 130

   66 term: identifier L_PAREN expressions R_PAREN .

    $default  reduce using rule 66 (term)


State 131

   39 multiplicative_exprs: SUB multiplicative_expr multiplicative_exprs .

    $default  reduce using rule 39 (multiplicative_exprs)


State 132

   40 multiplicative_exprs: ADD multiplicative_expr multiplicative_exprs .

    $default  reduce using rule 40 (multiplicative_exprs)


State 133

   26 else_prime: ELSE . statements

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 11

    identifier  go to state 39
    statements  go to state 143
    statement   go to state 41
    var         go to state 42


State 134

   20 statement: IF boolexpr THEN statements else_prime . ENDIF

    ENDIF  shift, and go to state 144


State 135

   48 r_a_es: OR relation_and_expr r_a_es .

    $default  reduce using rule 48 (r_a_es)


State 136

   51 r_es: AND relation_expr r_es .

    $default  reduce using rule 51 (r_es)


State 137

   43 terms: MULT term terms .

    $default  reduce using rule 43 (terms)


State 138

   44 terms: DIV term terms .

    $default  reduce using rule 44 (terms)


State 139

   45 terms: MOD term terms .

    $default  reduce using rule 45 (terms)


State 140

   21 statement: WHILE boolexpr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


State 141

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE . boolexpr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 49
    IDENT    shift, and go to state 11

    identifier           go to state 50
    var                  go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    boolexpr             go to state 145
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    term                 go to state 57


State 142

   68 expressions: expression expressions COMMA .

    $default  reduce using rule 68 (expressions)


State 143

   26 else_prime: ELSE statements .

    $default  reduce using rule 26 (else_prime)


State 144

   20 statement: IF boolexpr THEN statements else_prime ENDIF .

    $default  reduce using rule 20 (statement)


State 145

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE boolexpr .

    $default  reduce using rule 22 (statement)
